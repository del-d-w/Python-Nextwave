01. Numbers in Inverted Hollow Right Angled Triangle-4

Given two numbers S and N, write a program to print a Hollow Inverted Right Angled Triangle of N rows using numbers.
The numbers start from S on the N th row and increase by 1 until the 1st row.

https://assets.ccbp.in/frontend/content/programming-foundations/cx-description-numbers-in-inverted-hollow-right-angled-triangle-2.png
﻿
Note:

There is a space after each number.

Input:

The first line of input contains an integer representing S. The second line of input contains an integer representing N.

Output:

The output should be N rows containing numbers starting from S as a Hollow Inverted Right Angled Triangle 
shown in the sample output.

﻿Explanation:

For example, if the given numbers are S = 2 and N = 4,
• Print numbers on 4 rows, where the numbers start from 2 on the
4th row and increase by 1 until the 1st row as shown in the given image.

https://assets.ccbp.in/frontend/content/programming-foundations/cx-explanation-numbers-in-inverted-hollow-right-angled-triangle-2.png

﻿Note:

In the given image,
• The Empty box indicates two spaces (" ").
• The Number in the box indicates the number and a space ("11 ").
The output should be,

11 10 9 8
  7   5
    4 3
      2

Sample Input 1:

2
4

Sample Output 1:

11 10 9 8 
  7   5 
    4 3 
      2 

Sample Input 2:

15
5

Sample Output 2:

29 28 27 26 25 
  24     21 
    20   18 
      17 16 
        15 

Solution:

m=int(input())
n=int(input())
p=n*(n+1)//2-1+m
for i in range(n):
    for j in range(i):
        print(' ',end=' ')
    for j in range(n-i):
        if j==0 or i==0 or i+j==n-1:
            print(p,end=' ')
        else:
            print(' ',end=' ')
        p-=1
    print()

___________________________________________________________________________________________

02. ﻿Numbers in Inverted Hollow Pyramid

Given two numbers S and N, write a program to print a
Inverted Hollow Pyramid of N rows using numbers starting from S.

https://res.cloudinary.com/da7qpgps9/image/upload/v1677586163/Screenshot_from_2023-02-28_17-39-10_bzxrp6.png

Input:

The first line of input contains an integer representing S.
The second line of input contains an integer representing N.

Output:

The Output should be N rows containing numbers starting from S as a Inverted Hollow Pyramid shown in the sample output.

Explanation:

For example, if the given numbers are S = 3 and N = 4

Print numbers on 4 rows, starting from 3 as shown in the given image.

https://res.cloudinary.com/da7qpgps9/image/upload/v1677586210/Screenshot_from_2023-02-28_17-39-54_hdmrnt.png

﻿Note:

In the given image,
• The Empty box indicates two spaces (" ").
• The Number in the box indicates the number and a space ("3 ").
The output should be,

3 4 5 6
 7   9
  10 11
   12

Sample Input 1:

3
4

Sample Output 1:

3 4 5 6
 7   9
  10 11
   12

Sample Input 2:

13
6

Sample Output 2:

13 14 15 16 17 18 
 19       23 
  24     27 
   28   30 
    31 32 
     33 

Solution:

m=int(input())
n=int(input())
p=m 
for i in range(n):
    for j in range(i):
        print('',end=' ')
    for j in range(n-i):
        if i==0 or j==0 or i+j==n-1:
            print(p,end=' ')
        else:
            print(' ',end=' ')
        p+=1 
    print()

______________________________________________________________________________

03. Numbers in Hollow Diamond

Given a number N, write a program to print a Hallow Diamond of 2*N-1 rows using numbers starting from 1

https://assets.ccbp.in/frontend/content/programming-foundations/cx-description-number-hollow-diamond.png

Note:

There is a space after every number

Input:

The input will be a single line containing an integer representing N

Ouput:

The output should be 2*N-1 rows containing numbers starting from 1 as a Hallow Diamond shown in the sample output.

Explanation:

For example, if the given number is N = 5

Print the numbers on 9, 2*5-1 rows as shown in the given image.

https://assets.ccbp.in/frontend/content/programming-foundations/cx-explanation-number-hollow-diamond.png

﻿Note:

In the given image,
• The Empty box indicates two spaces (" ").
• The Number in the box indicates the number and a space ("1 ").
The output should be,

    1
   1 2
  1   3
 1     4
1       5
 1     4
  1   3
   1 2
    1

Sample Input 1:

5

Sample Output 1:

    1
   1 2
  1   3
 1     4
1       5
 1     4
  1   3
   1 2
    1

Sample Input 2:

8

Sample Output 2:

       1 
      1 2 
     1   3 
    1     4 
   1       5 
  1         6 
 1           7 
1             8 
 1           7 
  1         6 
   1       5 
    1     4 
     1   3 
      1 2 
       1

Solution:

n=int(input())
for i in range(n-1,0,-1):
    p=1 
    for j in range(i):
        print('',end=' ')
    for j in range(n-i):
        if j==0 or i+j==n-1:
            print(p,end=' ')
        else:
            print(' ',end=' ')
        p+=1
    print()
for i in range(n):
    p=1 
    for j in range(i):
        print('',end=' ')
    for j in range(n-i):
        if j==0 or i+j==n-1:
            print(p,end=' ')
        else:
            print(' ',end=' ')
        p+=1
    print()

_______________________________________________________________________________________________

04. Sum of Prime Numbers in Inputs

Given a number N, write a program that reads N numbers and prints the sum of prime numbers among the given numbers.

Note:

A Prime Number is a positive integer greater than 1 that has no factors other than 1 and itself.

Input:

The first line of input contains an integer representing N.
The next N lines of input contain integers.

Output:

The output should be a single line containing an integer obtained by adding the prime numbers in the given inputs.

For example, if the given number is N = 5
• The 5 numbers are

2
5
6
8
3

• The numbers that has no factors other than 1 and itself among the given numbers are 2, 5, and 3.
• The sum of numbers that has no factors other than 1 and itself among the given numbers is 10. ( 2+5+3=10)

The output should be 10.

Sample Input 1:

5
2
5
6
8
3

Sample Output 1:

10

Sample Input 2:

4
4
11
6
13

Sample Output 2:

24

Solution:

n=int(input())
sum=0
for i in range(n):
    m=int(input())
    is_prime=True
    for j in range(2,m):
        if m%j==0:
            is_prime=False
            break
    if m>1 and is_prime:
        sum+=m
print(sum)

_______________________________________________________________________________________________
