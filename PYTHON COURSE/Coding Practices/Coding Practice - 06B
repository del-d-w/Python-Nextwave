01. Find the Group

The Numbers in the 1 to 10 are divided into two groups, Group A and Group B

Group A       Group B
1               2
3               4
5               6
7               8
9               10

Write a program that reads a number N and prints the group in which the given number N is present. 
The number N is always from 1 to 10.

Input
The input will be a single line containing an integer representing N

Output
The output should be a single line containing a string representing the group of the number N.

Constraints
The number N given as input is always greater than O and less than or equal to 10.

Explanation
For example, if the given number is N = 6,
• The total number of groups is 2.
• The number that leaves 1 as the remainder when divided by 2 is in Group A. 
• The number that leaves O as the remainder when divided by 2 is in Group B. 
• When 6 is divided by 2 the remainder is 0. So, 6 should be in Group B.
The output should be Group B as the remainder is 0 when 6 is divided by 2.

Sample Input 1:

6

Sample Output 1:

Group B

Sample Input 2:

3

Sample Output 2:

Group A

Solution

number = int(input())
remainder = number % 2
if remainder == 1:
    print("Group A")
else:
    print("Group B")
_____________________________________________________________________________________________________________________

02. Find the Group - 2

The numbers from 1 to 30 are divided into 6 groups, Group 1, Group 2, Group 3, Group 4, Group 5, Group 6.

Group 1   Group 2   Group 3   Group 4   Group 5    Group 6

  1          2         3         4         5         6
  7          8         9         10        11        12
  13         14        15        16        17        18 
  19         20        21        22        23        24
  25         26        27        28        29        30

Write a program that reads a number N and prints the group in which the given number N is present. 
The number N is always from 1 to 30.

Input
The input will be a single line containing an integer representing N.

Output
The output should be a single line containing a string representing the group of the number N.

Constraints
The number N given as input is always greater than O and less than or equal to 30.

Explanation
For example, if the given number is N = 29

▼Detailed Explanation to find the group

The total number of groups are 6.
• The number that leaves 1 as the remainder when divided by 6 is in Group 1.
• The number that leaves 2 as the remainder when divided by 6 is in Group 2.
• The number that leaves 3 as the remainder when divided by 6 is in Group 3. 
• The number that leaves 4 as the remainder when divided by 6 is in Group 4. 
• The number that leaves 5 as the remainder when divided by 6 is in Group 5. 
• The number that leaves O as the remainder when divided by 6 is in Group 6.

• When 29 is divided by 6 the remainder is 5. So, 29 will be in Group 5.
The output should be Group 5.

Sample Input 1:

29

Sample Output 1:

Group 5

Sample Input 2:

3

Sample Output 2:

Group 3

Solution

if remainder == 1:
    print("Group 1")
elif remainder == 2:
    print("Group 2")
elif remainder == 3:
    print("Group 3")
elif remainder == 4:
    print("Group 4")
elif remainder == 5:
    print("Group 5")
else:
    print("Group 6")


"""
a=int(input())
list1=[1,7,13,19,25]
list2=[2,8,14,20,26]
list3=[3,9,15,21,27]
list4=[4,10,16,22,28]
list5=[5,11,17,23,29]
list6=[6,12,18,24,30]

if a in list1:
    print("Group 1")
elif a in list2:
    print("Group 2")
elif a in list3:
    print("Group 3")
elif a in list4:
    print("Group 4")
elif a in list5:
    print("Group 5")
elif a in list6:
    print("Group 6")
"""
_____________________________________________________________________________________________________________________

03. Denominations

Write a program that reads an amount A and prints the minimum number of 5 and 1 rupee notes required for the given amount.

Input
The input will be a single line containing an integer representing the amount A.

Output
The first line of output should be a string containing the required number of 5 notes as shown in the sample output.
The second line of output should be a string containing the required number of 1 rupee notes as shown in the sample output.

Explanation
For example, if the given amount A = 16,
• The number of 5 rupee notes required for 16 is 3. (16/5 = 3.2 )
    • The remaining amount is 1. (16 - (5 * 3) = 1 )
• The number of 1 rupee notes required for 1 is 1. (1/1 = 1)

Number of 5 rupee notes ⇒ 5 × 3 = 15
Number of 1 rupee notes ⇒ 1 × 1 = 1
--------------------------------------
Total                   ⇒         16
--------------------------------------

The output should be,

5:3
1:1

Sample Input 1:

16

Sample Output 1:

5:3
1:1

Sample Input 2:

102

Sample Output 2:

5:20
1:2

Solution

amount = int(input())
no_of_5s = amount // 5
no_of_1s = amount % 5
print("5:" + str(no_of_5s))
print("1:" + str(no_of_1s))

"""
a=int(input())
print(str(5)+":"+str(int(a/5)))
print(str(1)+":"+str(a%5))
"""
_____________________________________________________________________________________________________________________

04. Denominations - 2

﻿Write a program that reads an amount A and prints the minimum number of 100, 50, 10 and 1 rupee notes
required for the given amount.

Input
The input will be a single line containing an integer representing the amount A.

Output
The first line of output should be a string containing the required number of 100 rupee notes as shown in the sample output.
The second line of output should be a string containing the required number of 50 rupee notes as shown in the sample output.
The third line of output should be a string containing the required number of 10 rupee notes as shown in the sample output.
The fourth line of output should be a string containing the required number of 1 rupee notes as shown in the sample output.

Explanation

For example, if the given amount A = 893
• The number of 100 rupee notes required for 893 is 8. ( 893 / 100 = 8 )
    • The remaining amount is 93. (893 - (100 * 8) = 93 )
• The number of 50 rupee notes required for 93 is 1. ( 93 / 50 = 1.86 )
    • The remaining amount is 43. ( 93 - (50 * 1) = 43)
• The number of 10 rupee notes required for 43 is 4. ( 43 / 10 = 4.3 )
    • The remaining amount is 3. ( 43 - (10 * 4) = 3)
• The number of 1 rupee notes required for 3 is 3. ( 3/1 = 3)

Number of 100 rupee notes ⇒ 100 × 8 = 800
Number of 50 rupee notes  ⇒ 50 × 1  = 50
Number of 10 rupee notes  ⇒ 10 × 4  = 40
Number of 1 rupee notes   ⇒ 1  × 3  = 3
--------------------------------------------
Total                     ⇒         893
--------------------------------------------

The Output should be

100:8
50:1
10:4
1:3

Sample Input 1:

893

Sample Output 1:

100:8
50:1
10:4
1:3

Sample Input 2:

250

Sample Output 2:

100:2
50:1
10:0
1:0

Solution

amount=int(input())
no_of_100s=amount/100 
no_of_100s=int(no_of_100s)
remaining_amount=amount%100 

no_of_50s=remaining_amount/50
no_of_50s=int(no_of_50s)
remaining_amount=remaining_amount%50 

no_of_10s=remaining_amount/10 
no_of_10s=int(no_of_10s)
remaining_amount=remaining_amount%10 

no_of_1s=remaining_amount

print("100:"+str(no_of_100s))
print("50:"+str(no_of_50s))
print("10:"+str(no_of_10s))
print("1:"+str(no_of_1s))

"""
a=int(input())
b=(a/100)
b=int(b)
c=(a-b*(100))/50
c=int(c)
d=(a-((b*100)+(c*50)))/10
d=int(d)
e=(a-((b*100)+(c*50)+(d*10)))/1
e=int(e)
print("100"+":"+str(b))
print("50"+":"+str(c))
print("10"+":"+str(d))
print("1"+":"+str(e))
"""
_____________________________________________________________________________________________________________________

05. Denominations - 3

Write a program that reads an amount A and prints the minimum number of 500, 50, 10 and 1 rupee notes 
required for the given amount.

Input
The input will be a single line containing an integer representing the amount A

Output
The output should be a single line containing a string that has the number of 500, 50, 10 and 1 rupee notes 
required for the given amount A.

Explanation
For example, if the given amount A = 1543
• The number of 500 rupee notes required for 1543 is 3. ( 1543 / 500 = 3.086)
    • The remaining amount is 43. ( 1543 - (500 * 3) = 43)
• The number of 50 rupee notes required for 43 is 0. ( 43 / 50 = 0.86 )
• The number of 10 rupee notes required for 43 is 4. (43 / 10 = 4.3 )
    • The remaining amount is 3. (1543 - (500 * 3) - (10 * 4) = 3 )
• The number of 1 rupee notes required for 3 is 3. ( 3/1 = 3)

Number of 500 rupee notes ⇒ 500 × 3 = 1500
Number of 50 rupee notes  ⇒ 50 ×  0  = 0
Number of 10 rupee notes  ⇒ 10 ×  4  = 40
Number of 1 rupee notes   ⇒ 1  ×  3  = 3
--------------------------------------------
Total                     ⇒           1543
--------------------------------------------

The Output should be 500: 3 50: 0 10: 4 1: 3

Sample Input 1:

1543

Sample Output 1:

500: 3 50: 0 10: 4 1: 3

Sample Input 2:

1259

Sample Output 2:

500: 2 50: 5 10: 0 1: 9

Solution

amount=int(input())
no_of_500s=amount/500 
no_of_500s=int(no_of_500s)
remaining_amount=amount%500 

no_of_50s=remaining_amount/50 
no_of_50s=int(no_of_50s)
remaining_amount=remaining_amount%50 

no_of_10s=remaining_amount/10 
no_of_10s=int(no_of_10s)
remaining_amount=remaining_amount%10 

no_of_1s=remaining_amount

print("500: "+ str(no_of_500s)+" "+ "50: "+ str(no_of_50s)+" "+ "10: " + str(no_of_10s)+ " " + "1: " + str(no_of_1s))

"""
a=int(input())
b=(a/500)
b=int(b)
c=(a-b*(500))/50
c=int(c)
d=(a-((b*500)+(c*50)))/10
d=int(d)
e=(a-((b*500)+(c*50)+(d*10)))/1
e=int(e)
m="500: "+str(b)
n="50: "+str(c)
o="10: "+str(d)
p="1: "+str(e)

print(m+" "+n+" "+o+" "+p)

"""

_____________________________________________________________________________________________________________________
