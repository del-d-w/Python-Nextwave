01. Print Word

Given a string, write a program to print only the alphabets in the given string.

Note
In the given string there are two special characters before and two special characters after each letter. 
Ex: ##P##Y##T##H##O##N##.

Input
The input will be a single line containing a string.

Output
The output should be a single line containing a string that contains only alphabets.

Explanation

For example, if the given string is "--c--a--r--
• The alphabets in the string with index values are,

- - c - - a - - r - -
0 1 2 3 4 5 6 7 8 9 10

• The alphabets in the given string in order are c, a, r

The output should be car

Sample Input 1:

--c--a--r--

Sample Output 1:

car

Sample Input 2:

--p@@y--t@@h--o@@n--

Sample Output 2:

python

Sample Input 3:

##c--o--d--e--r##

Sample Output 3:

coder

Solution

string=input()
start_index=2
step=3
word=string[start_index::step]
print(word)

"""
s=input()
n=''
for i in s:
    if i.isalpha():
        n+=i 
print(n)
"""
_____________________________________________________________________________________________________________________

02. Pin Number

Given a string, write a program that checks if all the characters in the string are digits.
Print True if all the characters in the string are digits. Otherwise, print False.

Input
The input will be a single line containing a string.

Output
The output should be a single line containing a boolean. True should be printed if all the characters 
in the string are digits. Otherwise, False should be printed.

Sample Input 1:

5GNetwork

Sample Output 1:

False

Sample Input 2:

12345

Sample Output 2:

True

Sample Input 3:

nxtwave

Sample Output 3:

False

Solution

string=input()
contains_digit=string.isdigit()
print(contains_digit)

"""
s=input()
count=0
for i in s:
    if i.isdigit():
        count+=1 
if count==len(s):
    print("True")
else:
    print("False")
"""
_____________________________________________________________________________________________________________________

03. Strip Spaces

﻿Given a string S write a program that prints the modified string by removing the leading and trailing spaces
from the string S.

Note
• Leading spaces are any whitespace characters that appear before the first non-whitespace character in a string.
• Trailing spaces are any whitespace characters that appear after the last non-whitespace character in a string.
For example, in the string hello world", there are two leading spaces before the h and two trailing spaces after the d.

Input
The input will be a single line containing a string representing S.
Output
The output should be a single line containing a string obtained by removing the leading and trailing spaces from the given string.

Explanation

For example, if the given string is S = "                   practice    "
• S has trailing and leading spaces.
• S after removing trailing and leading spaces is practice.

The output should be practice.

Sample Input 1:

                   practice  

Sample Output 1:

practice

Sample Input 2:

  Tech Foundations  

Sample Output 2:

Tech Foundations

Solution

string=input()
stripped_string=string.strip(" ")
print(stripped_string)

_____________________________________________________________________________________________________________________

04. Strip Stars

﻿Given a string S, write a program that prints the modified string by removing the leading and trailing stars (*)
from the string S.

Note
• Leading stars that appear before the first non-whitespace character in a string.
• Trailing stars that appear after the last non-whitespace character in a string.

For example, in the string "****Hello, world****", there are four leading stars before the H 
and four trailing stars after the d.

Input
The input will be a single line containing a string representing S

Output
The output should be a single line containing a string obtained by removing the leading and trailing stars 
from the given string.

Explanation
For example, if the given string is S = "*******python*******
•S has trailing and leading stars.
• S after removing trailing and leading stars is python.
The output should be python.

Sample Input 1:

****python****

Sample Output 1:

python

Sample Input 2:

**ccbp4.0*********************** 

Sample Output 2:

ccbp4.0

Solution

string=input()
stripped_string=string.strip("*")
print(stripped_string)

_____________________________________________________________________________________________________________________

05. Lowercase

﻿Given a string, write a program to print the string by converting all the characters in the string to lowercase.

Input
The input will be a single line containing a string.

Output
The output should be a single line containing a string obtained by converting all the characters
in the given string to lowercase.

﻿Explanation

For example, if the given string is NOVEMBER,
• The characters in the string NOVEMBER are N, O, V, E, M, B, E, R.
• After converting characters into lowercase.
The output should be november.

Sample Input 1:

NOVEMBER

Sample Output 1:

november

Sample Input 2:

Amazing Journey

Sample Output 2:

amazing journey

Solution

string=input()
lowercase_string=string.lower()
print(lowercase_string)

_____________________________________________________________________________________________________________________

06. Uppercase

﻿Given a string, write a program to check if all the characters in the string are in uppercase.
Print True if the string contains all uppercase characters, otherwise print False.

Input
The input will be a single line containing a string.

Output
The output should be a single line containing a boolean. True should be printed if all the characters
in the string are in uppercase. Otherwise, False should be printed.
﻿
Explanation
For example, if the given string is IEEE, the output should be True as all the characters in
the given string are in uppercase.

Sample Input 1:

IEEE

Sample Output 1:

True

Sample Input 2:

CommuNitY

Sample Output 2:

False

Sample Input 3:

MALALA YoUSaFZAI

Sample Output 3:

False

Solution

string=input()
is_string_uppercase=string==string.upper()
print(is_string_uppercase)

"""
n=input()
if n.isupper():
    print(True)
else:
    print(False)
"""
_____________________________________________________________________________________________________________________

07. Date Format
﻿
Given a string in the format dd-mm-yy S, write a program to convert the string from dd-mm-yy format to dd/mm/yy format.

Input
The input will be a single line containing a string representing S.

Output
The output should be a single line containing a string after converting from dd-mm-yy format to dd/mm/yy.

Explanation
For example, if the given string is S = 07-11-2020
• After replacing " - " with "/" in the date 07/11/2020.
The output should be 07/11/2020

Sample Input 1:

07-11-2020

Sample Output 1:

07/11/2020

Sample Input 2:

12-10-2222

Sample Output 2:

12/10/2222

Solution

date=input()
dateformat=date.replace("-","/")
print(dateformat)

_____________________________________________________________________________________________________________________

08. Lowercase & Uppercase

Given a string S, write a program that prints the given string after converting all the characters to lowercase and uppercase.

Input
The input will be a single line containing a string representing S

Output
The first line of output should be a string containing lowercase characters. The second line of output should 
be a string containing uppercase characters.

Explanation
For example, if the given string is S = "Learning",
• The characters in the string S are L, e, a, r, n, i, n and g.
• After converting string S to lowercase, the string is learning.
• After converting string S to uppercase, the string is LEARNING.
The output should be,

learning
LEARNING

Sample Input 1:

Learning

Sample Output 1:

learning
LEARNING

Sample Input 2:

Transportation

Sample Output 2:

transportation
TRANSPORTATION

Solution

word=input()
lower_case_word=word.lower()
upper_case_word=word.upper()
print(lower_case_word)
print(upper_case_word)

_____________________________________________________________________________________________________________________

09. Upper case Letters

﻿Given a string, write a program that prints all the uppercase letters of the given string.

Input
The input will be a single line containing a string.

Output
The output should be a single line containing a string obtained by joining the uppercase letters of the given string.

Explanation

For example, if the given string is SofTwArE.
• The characters of the given string are S, o, f, T, w, A, r and E.
• The uppercase letters in the given string are S, T, A and E.
The output should be STAE.

Sample Input 1:

SofTwArE

Sample Output 1:

STAE

Sample Input 2:

HACKathons

Sample Output 2:

HACK

Solution

string=input()
upper_case_letters=""
for character in string:
    is_upper=(character==character.upper())
    if is_upper:
        upper_case_letters=upper_case_letters+character
print(upper_case_letters)

"""
s=input()
n=''
for i in s:
    if i.isupper():
        n+=i 
print(n)
"""
_____________________________________________________________________________________________________________________
